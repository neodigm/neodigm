{"version":3,"file":"ScrollTrigger.min.js","sources":["../src/ScrollTrigger.js"],"sourcesContent":["/*!\n * ScrollTrigger 3.3.0\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _raf, _request, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp,\n\t_startup = 1,\n\t_getTime = Date.now,\n\t_time1 = _getTime(),\n\t_lastScrollTime = 0,\n\t_enabled = 1,\n\t_passThrough = v => v,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isViewport = e => !!~_root.indexOf(e),\n\t_getScrollFunc = (element, {s}) => function(value) { return arguments.length ? (element[s] = value) : element[s]; },\n\t_maxScroll = (element, {s, d2}) => (s = \"scroll\" + d2) && _isViewport(element) ? Math.max(_docEl[s], _body[s]) - (_win[\"inner\" + d2] || _docEl[\"client\" + d2] || _body[\"client\" + d2]) : element[s] - element[\"offset\" + d2],\n\t_isString = value => typeof(value) === \"string\",\n\t_isFunction = value => typeof(value) === \"function\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isObject = value => typeof(value) === \"object\",\n\t_abs = Math.abs,\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_left = \"left\",\n\t_top = \"top\",\n\t_right = \"right\",\n\t_bottom = \"bottom\",\n\t_width = \"width\",\n\t_height = \"height\",\n\t_Right = \"Right\",\n\t_Left = \"Left\",\n\t_Top = \"Top\",\n\t_Bottom = \"Bottom\",\n\t_padding = \"padding\",\n\t_margin = \"margin\",\n\t_Width = \"Width\",\n\t_Height = \"Height\",\n\t_px = \"px\",\n\t_horizontal = {s: _scrollLeft, p: _left, p2: _Left, os: _right, os2: _Right, d: _width, d2: _Width, a: \"x\", sc: function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0}},\n\t_vertical = {s: _scrollTop, p: _top, p2: _Top, os: _bottom, os2: _Bottom, d: _height, d2: _Height, a: \"y\", op: _horizontal, sc: function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0}},\n\t_getComputedStyle = element => _win.getComputedStyle(element),\n\t_makePositionable = element => element.style.position = (_getComputedStyle(element).position === \"absolute\") ? \"absolute\" : \"relative\", // if the element already has position: absolute, leave that, otherwise make it position: relative\n\t_setDefaults = (obj, defaults) => {\n\t\tfor (let p in defaults) {\n\t\t\t(p in obj) || (obj[p] = defaults[p]);\n\t\t}\n\t\treturn obj;\n\t},\n\t//_isInViewport = element => (element = _getBounds(element)) && !(element.top > (_win.innerHeight || _docEl.clientHeight) || element.bottom < 0 || element.left > (_win.innerWidth || _docEl.clientWidth) || element.right < 0) && element,\n\t_getBounds = (element, withoutTransforms) => {\n\t\tlet tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0}).progress(1),\n\t\t\tbounds = element.getBoundingClientRect();\n\t\ttween && tween.progress(0).kill();\n\t\treturn bounds;\n\t},\n\t_getSize = (element, {d2}) => element[\"offset\" + d2] || element[\"client\" + d2] || 0,\n\t_getLabels = animation => {\n\t\treturn value => {\n\t\t\tlet a = [],\n\t\t\t\tlabels = animation.labels,\n\t\t\t\tduration = animation.duration(),\n\t\t\t\tp;\n\t\t\tfor (p in labels) {\n\t\t\t\ta.push(labels[p] / duration);\n\t\t\t}\n\t\t\treturn gsap.utils.snap(a, value);\n\t\t};\n\t},\n\t_multiListener = (func, element, types, callback) => types.split(\",\").forEach(type => func(element, type, callback)),\n\t_addListener = (element, type, func) => element.addEventListener(type, func, {passive: true}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_markerDefaults = {startColor: \"green\", endColor: \"red\", indent: 0, fontSize: \"16px\", fontWeight:\"normal\"},\n\t_defaults = {toggleActions: \"play\", anticipatePin: 0},\n\t_keywords = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1},\n\t_offsetToPx = (value, size) => {\n\t\tif (_isString(value)) {\n\t\t\tlet eqIndex = value.indexOf(\"=\"),\n\t\t\t\trelative = ~eqIndex ? +(value.charAt(eqIndex-1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\t\t\tif (relative) {\n\t\t\t\t(value.indexOf(\"%\") > eqIndex) && (relative *= size / 100);\n\t\t\t\tvalue = value.substr(0, eqIndex-1);\n\t\t\t}\n\t\t\tvalue = relative + ((value in _keywords) ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n\t\t}\n\t\treturn value;\n\t},\n\t_createMarker = (type, name, container, direction, {startColor, endColor, fontSize, indent, fontWeight}, offset, matchWidthEl) => {\n\t\tlet e = _doc.createElement(\"div\"),\n\t\t\tisViewport = _isViewport(container),\n\t\t\tisScroller = type.indexOf(\"scroller\") !== -1,\n\t\t\tparent = isViewport ? _body : container,\n\t\t\tisStart = type.indexOf(\"start\") !== -1,\n\t\t\tcolor = isStart ? startColor : endColor,\n\t\t\tcss = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\t\tcss += \"position:\" + (isScroller && isViewport ? \"fixed;\" : \"absolute;\");\n\t\t(isScroller || !isViewport) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n\t\tmatchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n\t\te._isStart = isStart;\n\t\te.setAttribute(\"class\", \"gsap-marker-\" + type);\n\t\te.style.cssText = css;\n\t\te.innerText = name || name === 0 ? type + \"-\" + name : type;\n\t\tparent.insertBefore(e, parent.children[0]);\n\t\te._offset = e[\"offset\" + direction.op.d2];\n\t\t_positionMarker(e, 0, direction, isViewport, isStart);\n\t\treturn e;\n\t},\n\t_positionMarker = (marker, start, direction, isViewport, flipped) => {\n\t\tlet vars = {},\n\t\t\tside = direction[flipped ? \"os2\" : \"p2\"],\n\t\t\toppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n\t\tmarker._isFlipped = flipped;\n\t\tvars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n\t\tvars[direction.a] = flipped ? 1 : 0;\n\t\tvars[\"border\" + side + _Width] = 1;\n\t\tvars[\"border\" + oppositeSide + _Width] = 0;\n\t\tvars[direction.p] = start;\n\t\tgsap.set(marker, vars);\n\t},\n\t_triggers = [],\n\t_ids = {},\n\t_sync = () => _request || (_request = _raf(_updateAll)),\n\t_onScroll = () => {\n\t\tif (!_request) {\n\t\t\t_request = _raf(_updateAll);\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t}\n\t},\n\t_onResize = () => !_refreshing && (_getTime() - _lastScrollTime > 200) && _resizeDelay.restart(true), // ignore resizes that occur DURING a scroll as well as those triggered by refresh()\n\t_listeners = {},\n\t_dispatch = type => _listeners[type] && _listeners[type].forEach(f => f()),\n\t_refreshAll = force => {\n\t\tlet l = _triggers.length,\n\t\t\ti = 0;\n\t\t_dispatch(\"refreshInit\");\n\t\tfor (; i < l; i++) {\n\t\t\t_triggers[i].refresh(force !== true);\n\t\t}\n\t\t_dispatch(\"refresh\");\n\t},\n\t_updateAll = () => {\n\t\tlet l = _triggers.length,\n\t\t\ti = 0,\n\t\t\ttime = _getTime(),\n\t\t\trecordVelocity = time - _time1 >= 50;\n\t\tif (recordVelocity) {\n\t\t\tif (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n\t\t\t\t_lastScrollTime = 0;\n\t\t\t\t_dispatch(\"scrollEnd\");\n\t\t\t}\n\t\t\t_time2 = _time1;\n\t\t\t_time1 = time;\n\t\t}\n\t\tfor (; i < l; i++) {\n\t\t\t_triggers[i] && _triggers[i].update(0, recordVelocity);\n\t\t}\n\t\t_request = 0;\n\t},\n\t_propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\"],\n\t_stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n\t_swapPinOut = (pin, spacer, state) => {\n\t\tif (pin.parentNode === spacer) {\n\t\t\tlet parent = spacer.parentNode;\n\t\t\t_setState(state);\n\t\t\tif (parent) {\n\t\t\t\tparent.insertBefore(pin, spacer);\n\t\t\t\tparent.removeChild(spacer);\n\t\t\t}\n\t\t}\n\t},\n\t_swapPinIn = (pin, spacer, cs) => {\n\t\tif (pin.parentNode !== spacer) {\n\t\t\tlet i = _propNamesToCopy.length,\n\t\t\t\tspacerStyle = spacer.style,\n\t\t\t\tpinStyle = pin.style,\n\t\t\t\tp;\n\t\t\twhile (i--) {\n\t\t\t\tp = _propNamesToCopy[i];\n\t\t\t\tspacerStyle[p] = cs[p];\n\t\t\t}\n\t\t\tspacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n\t\t\tpinStyle[_bottom] = pinStyle[_right] = \"auto\";\n\t\t\tspacerStyle.overflow = \"visible\";\n\t\t\tspacerStyle.boxSizing = \"border-box\";\n\t\t\tspacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n\t\t\tspacerStyle[_height] = _getSize(pin, _vertical) + _px;\n\t\t\tspacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\t\t\tpinStyle[_width] = cs[_width];\n\t\t\tpinStyle[_height] = cs[_height];\n\t\t\tpinStyle[_padding] = cs[_padding];\n\t\t\tpin.parentNode.insertBefore(spacer, pin);\n\t\t\tspacer.appendChild(pin);\n\t\t}\n\t},\n\t_capsExp = /([A-Z])/g,\n\t_setState = state => {\n\t\tlet style = state.t.style,\n\t\t\tl = state.length,\n\t\t\ti = 0,\n\t\t\tp, value;\n\t\tfor (; i < l; i +=2) {\n\t\t\tvalue = state[i+1];\n\t\t\tp = state[i];\n\t\t\tif (value) {\n\t\t\t\tstyle[p] = value;\n\t\t\t} else if (style[p]) {\n\t\t\t\tstyle.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t}\n\t\t}\n\t},\n\t_getState = element => { // returns an array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n\t\tlet l = _stateProps.length,\n\t\t\tstyle = element.style,\n\t\t\tstate = [],\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\tstate.push(_stateProps[i], style[_stateProps[i]]);\n\t\t}\n\t\tstate.t = element;\n\t\treturn state;\n\t},\n\t_copyState = (state, override, omitOffsets) => {\n\t\tlet result = [],\n\t\t\tl = state.length,\n\t\t\ti = omitOffsets ? 8 : 0, // skip top, left, right, bottom if omitOffsets is true\n\t\t\tp;\n\t\tfor (; i < l; i += 2) {\n\t\t\tp = state[i];\n\t\t\tresult.push(p, (p in override) ? override[p] : state[i+1]);\n\t\t}\n\t\tresult.t = state.t;\n\t\treturn result;\n\t},\n\t_winOffsets = {left:0, top:0},\n\t_parsePosition = (value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, isViewport, scrollerMax) => {\n\t\t_isFunction(value) && (value = value(self));\n\t\tif (_isString(value) && value.substr(0,3) === \"max\") {\n\t\t\tvalue = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n\t\t}\n\t\tif (!_isNumber(value)) {\n\t\t\t_isFunction(trigger) && (trigger = trigger(self));\n\t\t\tlet element = _toArray(trigger)[0] || _body,\n\t\t\t\tbounds = _getBounds(element) || {},\n\t\t\t\toffsets = value.split(\" \"),\n\t\t\t\tlocalOffset, globalOffset, display;\n\t\t\tif ((!bounds || (!bounds.left && !bounds.top)) && _getComputedStyle(element).display === \"none\") { // if display is \"none\", it won't report getBoundingClientRect() properly\n\t\t\t\tdisplay = element.style.display;\n\t\t\t\telement.style.display = \"block\";\n\t\t\t\tbounds = _getBounds(element);\n\t\t\t\tdisplay ? (element.style.display = display) : element.style.removeProperty(\"display\");\n\t\t\t}\n\t\t\tlocalOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n\t\t\tglobalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n\t\t\tvalue = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n\t\t\tmarkerScroller && _positionMarker(markerScroller, globalOffset, direction, isViewport, (scrollerSize - globalOffset < 20 || (markerScroller._isStart && globalOffset > 20)));\n\t\t\tscrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n\t\t} else if (markerScroller) {\n\t\t\t_positionMarker(markerScroller, scrollerSize, direction, isViewport, true);\n\t\t}\n\t\tif (marker) {\n\t\t\tlet position = value + scrollerSize,\n\t\t\t\tisStart = marker._isStart;\n\t\t\tscrollerMax = \"scroll\" + direction.d2;\n\t\t\t_positionMarker(marker, position, direction, isViewport, (isStart && position > 20) || (!isStart && (isViewport ? Math.max(_body[scrollerMax], _docEl[scrollerMax]) : marker.parentNode[scrollerMax]) <= position + 1)); // marker.style[direction.p] = (value + scrollerSize - (isViewport ? direction.m : 0)) + \"px\";\n\t\t\tif (isViewport) {\n\t\t\t\tscrollerBounds = _getBounds(markerScroller);\n\t\t\t\tisViewport && (marker.style[direction.op.p] = (scrollerBounds[direction.op.p] - direction.op.m - marker._offset) + _px);\n\t\t\t}\n\t\t}\n\t\treturn Math.round(value);\n\t},\n\t_prefixExp = /(?:webkit|moz|length)/i,\n\t_reparent = (element, parent) => {\n\t\tif (element.parentNode !== parent) {\n\t\t\tlet style = element.style,\n\t\t\t\tp, cs;\n\t\t\tif (parent === _body) {\n\t\t\t\telement._stOrig = style.cssText; // record original inline styles so we can revert them later\n\t\t\t\tcs = _getComputedStyle(element);\n\t\t\t\tfor (p in cs) { // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n\t\t\t\t\tif (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n\t\t\t\t\t\tstyle[p] = cs[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstyle.cssText = element._stOrig;\n\t\t\t}\n\t\t\tparent.appendChild(element);\n\t\t}\n\t},\n\t// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n\t_getTweenCreator = (scroller, direction) => {\n\t\tlet getScroll = _isViewport(scroller) ? direction.sc : _getScrollFunc(scroller, direction),\n\t\t\tprop = \"_scroll\" + direction.p2, // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n\t\t\tlastScroll,\n\t\t\tgetTween = (scrollTo, vars, initialValue, change1, change2) => {\n\t\t\t\tlet tween = getTween.tween,\n\t\t\t\t\tonComplete = vars.onComplete,\n\t\t\t\t\tmodifiers = {};\n\t\t\t\ttween && tween.kill();\n\t\t\t\tlastScroll = getScroll();\n\t\t\t\tvars[prop] = scrollTo;\n\t\t\t\tvars.modifiers = modifiers;\n\t\t\t\tmodifiers[prop] = value => {\n\t\t\t\t\tif (getScroll() !== lastScroll) { // if the user scrolls, kill the tween!\n\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\t\tvalue = getScroll();\n\t\t\t\t\t} else if (change1) {\n\t\t\t\t\t\tvalue = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;\n\t\t\t\t\t}\n\t\t\t\t\treturn (lastScroll = Math.round(value));\n\t\t\t\t};\n\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\tonComplete && onComplete.call(tween);\n\t\t\t\t};\n\t\t\t\ttween = getTween.tween = gsap.to(scroller, vars);\n\t\t\t\treturn tween;\n\t\t\t};\n\t\tscroller[prop] = getScroll;\n\t\treturn getTween;\n\t};\n\n_horizontal.op = _vertical;\n\n\n\nexport class ScrollTrigger {\n\n\tconstructor(vars, animation) {\n\t\t_coreInitted || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n\t\tthis.init(vars, animation);\n\t}\n\n\tinit(vars, animation) {\n\t\tthis.progress = 0;\n\t\tthis.vars && this.kill(1); // in case it's being initted again\n\t\tif (!_enabled) {\n\t\t\tthis.update = this.refresh = this.kill = _passThrough;\n\t\t\treturn;\n\t\t}\n\t\tvars = _setDefaults((_isString(vars) || _isNumber(vars) || vars.nodeType) ? {trigger: vars} : vars, _defaults);\n\t\tlet direction = vars.horizontal ? _horizontal : _vertical,\n\t\t\t{onUpdate, toggleClass, id, onToggle, onRefresh, scrub, trigger, pin, pinSpacing, invalidateOnRefresh, anticipatePin, onScrubComplete, onSnapComplete, once, snap, pinReparent} = vars,\n\t\t\tisToggle = !scrub && scrub !== 0,\n\t\t\tscroller = _toArray(vars.scroller || _win)[0],\n\t\t\tscrollerCache = gsap.core.getCache(scroller),\n\t\t\tisViewport = _isViewport(scroller),\n\t\t\tcallbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n\t\t\ttoggleActions = isToggle && (once ? \"play\" : vars.toggleActions).split(\" \"),\n\t\t\tmarkers = \"markers\" in vars ? vars.markers : _defaults.markers,\n\t\t\tborderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n\t\t\tsoftRefresh = () => ScrollTrigger.removeEventListener(\"scrollEnd\", softRefresh) || this.refresh(),\n\t\t\tself = this,\n\t\t\ttweenTo, pinCache, snapFunc, isReverted, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars, change, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, spacingStart, spacingActive, markerStartSetter, markerEndSetter, cs, initted, snap1, snap2, scrubScrollTime, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, enabled;\n\n\t\tanticipatePin *= 45;\n\t\t_triggers.push(self);\n\t\tself.scroller = scroller;\n\t\tself.scroll = isViewport ? direction.sc : _getScrollFunc(scroller, direction);\n\t\tscroll1 = self.scroll();\n\t\tself.vars = vars;\n\t\tanimation = animation || vars.animation;\n\t\tscrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n\t\t\ttop: _getTweenCreator(scroller, _vertical),\n\t\t\tleft: _getTweenCreator(scroller, _horizontal)\n\t\t};\n\t\tself.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\t\tif (animation) {\n\t\t\tanimation.vars.lazy = false;\n\t\t\tanimation._initted || animation.render(0, true, true);\n\t\t\tself.animation = animation.pause();\n\t\t\tanimation.scrollTrigger = self;\n\t\t\tscrubSmooth = _isNumber(scrub) && scrub;\n\t\t\tscrubSmooth && (scrubTween = gsap.to(animation, {ease: \"power3\", duration: scrubSmooth, onComplete: () => onScrubComplete && onScrubComplete(self)}));\n\t\t\tsnap1 = 0;\n\t\t\tid || (id = animation.vars.id);\n\t\t}\n\t\tif (snap) {\n\t\t\t_isObject(snap) || (snap = {snapTo: snap});\n\t\t\tsnapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getLabels(animation) : gsap.utils.snap(snap.snapTo);\n\t\t\tsnapDurClamp = snap.duration || {min: 0.1, max: 2};\n\t\t\tsnapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n\t\t\tsnapDelayedCall = gsap.delayedCall(snap.delay || (scrubSmooth / 2) || 0.1, () => {\n\t\t\t\tif (!_lastScrollTime || (_lastScrollTime === scrubScrollTime && !_pointerIsDown)) {\n\t\t\t\t\tlet totalProgress = animation && !isToggle ? animation.totalProgress() : self.progress,\n\t\t\t\t\t\tvelocity = ((totalProgress - snap2) / (_getTime() - _time2) * 1000) || 0,\n\t\t\t\t\t\tchange1 = _abs(velocity / 2) * velocity / 0.185,\n\t\t\t\t\t\tnaturalEnd = totalProgress + change1,\n\t\t\t\t\t\tendValue = _clamp(0, 1, snapFunc(naturalEnd, self)),\n\t\t\t\t\t\tchange2 = endValue - totalProgress - change1,\n\t\t\t\t\t\tscroll = self.scroll(),\n\t\t\t\t\t\tendScroll = Math.round(start + endValue * change),\n\t\t\t\t\t\ttween = tweenTo.tween;\n\t\t\t\t\tif (scroll <= end && scroll >= start) {\n\t\t\t\t\t\tif (tween && !tween._initted) { // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n\t\t\t\t\t\t\tif (tween.data <= Math.abs(endScroll - scroll)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweenTo(endScroll, {\n\t\t\t\t\t\t\tduration: snapDurClamp(_abs( (Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05) || 0)),\n\t\t\t\t\t\t\tease: snap.ease || \"power3\",\n\t\t\t\t\t\t\tdata: Math.abs(endScroll - scroll), // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tsnap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n\t\t\t\t\t\t\t\tonSnapComplete && onSnapComplete(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, start + totalProgress * change, change1 * change, change2 * change);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t}).pause();\n\t\t}\n\t\tid && (_ids[id] = self);\n\t\ttrigger = self.trigger = _toArray(trigger || pin)[0];\n\t\tpin = pin === true ? trigger : _toArray(pin)[0];\n\t\t_isString(toggleClass) && (toggleClass = {targets: trigger, className: toggleClass});\n\t\tif (pin) {\n\t\t\t(pinSpacing === false || pinSpacing === _margin) || (pinSpacing = _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default.\n\t\t\tself.pin = pin;\n\t\t\tvars.force3D !== false && gsap.set(pin, {force3D: true});\n\t\t\tpinCache = gsap.core.getCache(pin);\n\t\t\tif (!pinCache.spacer) { // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n\t\t\t\tpinCache.spacer = spacer = _doc.createElement(\"div\");\n\t\t\t\tspacer.setAttribute(\"class\", \"pin-spacer\" + (id ? \" pin-spacer-\" + id : \"\"));\n\t\t\t\tpinCache.pinState = pinOriginalState = _getState(pin);\n\t\t\t} else {\n\t\t\t\tpinOriginalState = pinCache.pinState;\n\t\t\t}\n\t\t\tself.spacer = spacer = pinCache.spacer;\n\t\t\tcs = _getComputedStyle(pin);\n\t\t\tspacingStart = cs[pinSpacing + direction.os2];\n\t\t\tpinGetter = gsap.getProperty(pin);\n\t\t\tpinSetter = gsap.quickSetter(pin, direction.a, _px);\n\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\tpinState = _getState(pin);\n\t\t}\n\t\tif (markers) {\n\t\t\tmarkerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n\t\t\tmarkerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n\t\t\tmarkerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n\t\t\toffset = markerStartTrigger[\"offset\" + direction.op.d2];\n\t\t\tmarkerStart = _createMarker(\"start\", id, scroller, direction, markerVars, offset);\n\t\t\tmarkerEnd =_createMarker(\"end\", id, scroller, direction, markerVars, offset);\n\t\t\tif (!isViewport) {\n\t\t\t\t_makePositionable(scroller);\n\t\t\t\tgsap.set([markerStartTrigger, markerEndTrigger], {force3D: true});\n\t\t\t\tmarkerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n\t\t\t\tmarkerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n\t\t\t}\n\t\t}\n\n\t\tself.revert = () => {\n\t\t\tself.update(1); // make sure the pin is back in its original position so that all the measurements are correct.\n\t\t\tpin && _swapPinOut(pin, spacer, pinOriginalState);\n\t\t\tisReverted = 1;\n\t\t}\n\n\t\tself.refresh = soft => {\n\t\t\tif (_refreshing || !enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pin && soft && _lastScrollTime) {\n\t\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", softRefresh);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet prevScroll = self.scroll(); // record the scroll so we can revert later (repositioning/pinning things can affect scroll position)\n\t\t\t_refreshing = 1;\n\t\t\tscrubTween && scrubTween.kill();\n\t\t\tinvalidateOnRefresh && animation && animation.progress(0).invalidate().progress(self.progress);\n\t\t\tisReverted || self.revert();\n\t\t\tlet size = (isViewport ? _win[\"inner\" + direction.d2] : scroller[\"client\" + direction.d2]) || 0,\n\t\t\t\tscrollerBounds = isViewport ? _winOffsets : _getBounds(scroller),\n\t\t\t\tmax = _maxScroll(scroller, direction),\n\t\t\t\toffset = 0,\n\t\t\t\tparsedEnd = vars.end,\n\t\t\t\tparsedEndTrigger = vars.endTrigger || trigger,\n\t\t\t\tparsedStart = vars.start || (pin || !trigger ? \"0 0\" : \"0 100%\"),\n\t\t\t\tcs, bounds, scroll, isVertical, override;\n\t\t\tstart = _parsePosition(parsedStart, trigger, size, direction, self.scroll(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, isViewport, max) || (pin ? -0.001 : 0);\n\t\t\t_isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\t\t\tif (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n\t\t\t\tif (~parsedEnd.indexOf(\" \")) {\n\t\t\t\t\tparsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n\t\t\t\t} else {\n\t\t\t\t\toffset = _offsetToPx(parsedEnd.substr(2), size);\n\t\t\t\t\tparsedEnd = _isString(parsedStart) ? parsedStart : start + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\t\t\t\t\tparsedEndTrigger = trigger;\n\t\t\t\t}\n\t\t\t}\n\t\t\tend = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, self.scroll() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, isViewport, max)) || -0.001;\n\t\t\tchange = (end - start) || ((start -= 0.01) && 0.001);\n\t\t\tif (pin) {\n\t\t\t\tcs = _getComputedStyle(pin);\n\t\t\t\tisVertical = (direction === _vertical);\n\t\t\t\tscroll = self.scroll(); // recalculate because the triggers can affect the scroll\n\t\t\t\tpinStart = parseFloat(pinGetter(direction.a));\n\t\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\t\tpinState = _getState(pin);\n\t\t\t\t// transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\t\t\t\tbounds = _getBounds(pin, true);\n\t\t\t\tif (pinSpacing) {\n\t\t\t\t\tspacer.style[pinSpacing + direction.os2] = change + _px;\n\t\t\t\t\tspacingActive = (pinSpacing === _padding) ? _getSize(pin, direction) + change : 0;\n\t\t\t\t\tspacingActive && (spacer.style[direction.d] = spacingActive + _px); // for box-sizing: border-box (must include padding).\n\t\t\t\t\tisViewport && self.scroll(scroll);\n\t\t\t\t}\n\t\t\t\tif (isViewport) {\n\t\t\t\t\toverride = {\n\t\t\t\t\t\ttop: (bounds.top + (isVertical ? scroll - start : 0)) + _px,\n\t\t\t\t\t\tleft: (bounds.left + (isVertical ? 0 : scroll - start)) + _px,\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tposition: \"fixed\"\n\t\t\t\t\t};\n\t\t\t\t\toverride[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n\t\t\t\t\toverride[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n\t\t\t\t\toverride[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n\t\t\t\t\toverride[_padding] = cs[_padding];\n\t\t\t\t\toverride[_padding + _Top] = cs[_padding + _Top];\n\t\t\t\t\toverride[_padding + _Right] = cs[_padding + _Right];\n\t\t\t\t\toverride[_padding + _Bottom] = cs[_padding + _Bottom];\n\t\t\t\t\toverride[_padding + _Left] = cs[_padding + _Left];\n\t\t\t\t\tpinActiveState = _copyState(pinOriginalState, override, pinReparent);\n\t\t\t\t}\n\t\t\t} else if (trigger && self.scroll()) { // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n\t\t\t\tbounds = trigger.parentNode;\n\t\t\t\twhile (bounds && bounds !== _body) {\n\t\t\t\t\tif (bounds._pinOffset) {\n\t\t\t\t\t\tstart -= bounds._pinOffset;\n\t\t\t\t\t\tend -= bounds._pinOffset;\n\t\t\t\t\t}\n\t\t\t\t\tbounds = bounds.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.start = start;\n\t\t\tself.end = end;\n\t\t\tself.scroll() < prevScroll && self.scroll(prevScroll);\n\t\t\tself.update();\n\t\t\t_refreshing = isReverted = 0;\n\t\t\tinitted = 1;\n\t\t\tpin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * change));\n\t\t\tonRefresh && onRefresh(self);\n\t\t};\n\n\t\tself.getVelocity = () => (self.scroll() - scroll2) / (_getTime() - _time2) * 1000;\n\n\t\tself.update = (reset, recordVelocity) => {\n\t\t\tlet scroll = self.scroll(),\n\t\t\t\tp = reset ? 0 : (scroll - start) / change,\n\t\t\t\tclipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n\t\t\t\tprevProgress = self.progress,\n\t\t\t\tisActive, wasActive, toggleState, action, stateChanged, toggled;\n\t\t\tif (recordVelocity) {\n\t\t\t\tscroll2 = scroll1;\n\t\t\t\tscroll1 = scroll;\n\t\t\t\tif (snap) {\n\t\t\t\t\tsnap2 = snap1;\n\t\t\t\t\tsnap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\t\t\t(anticipatePin && !clipped && pin && !_refreshing && start < scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) && (clipped = 0.0001);\n\t\t\tif (clipped !== prevProgress && enabled) {\n\t\t\t\tisActive = self.isActive = !!clipped && clipped < 1;\n\t\t\t\twasActive = !!prevProgress && prevProgress < 1;\n\t\t\t\ttoggled = isActive !== wasActive;\n\t\t\t\tstateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\t\t\t\tself.direction = clipped > prevProgress ? 1 : -1;\n\t\t\t\tself.progress = clipped;\n\t\t\t\tif (pin) {\n\t\t\t\t\treset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\t\t\t\t\tif (!isViewport) {\n\t\t\t\t\t\tpinSetter(pinStart + change * clipped);\n\t\t\t\t\t} else if (stateChanged) {\n\t\t\t\t\t\taction = scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\t\t\t\t\t\tif (pinReparent) {\n\t\t\t\t\t\t\tif (!_refreshing && (isActive || action)) {\n\t\t\t\t\t\t\t\tlet bounds = _getBounds(pin, true),\n\t\t\t\t\t\t\t\t\toffset = scroll - start;\n\t\t\t\t\t\t\t\tpin.style.top = (bounds.top + (direction === _vertical ? offset : 0)) + _px;\n\t\t\t\t\t\t\t\tpin.style.left = (bounds.left + (direction === _vertical ? 0 : offset)) + _px;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_reparent(pin, !_refreshing && (isActive || action) ? _body : spacer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setState(isActive || action ? pinActiveState : pinState);\n\t\t\t\t\t\tpinSetter(pinStart + (clipped === 1 && !action ? change : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isToggle) {\n\t\t\t\t\tif (scrubTween && !_refreshing && !_startup) {\n\t\t\t\t\t\tscrubTween.vars.totalProgress = clipped;\n\t\t\t\t\t\tscrubTween.invalidate().restart();\n\t\t\t\t\t} else if (animation) {\n\t\t\t\t\t\tanimation.totalProgress(clipped);\n\t\t\t\t\t}\n\t\t\t\t\tonUpdate && !reset && onUpdate(self);\n\t\t\t\t}\n\t\t\t\tif (snap && !tweenTo.tween && !_refreshing && !_startup) {\n\t\t\t\t\tscrubScrollTime = _lastScrollTime;\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t\tif (stateChanged) {\n\t\t\t\t\ttoggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack\n\t\t\t\t\tif (clipped === 1 && once && !reset) {\n\t\t\t\t\t\tself.kill();\n\t\t\t\t\t} else if (isToggle) {\n\t\t\t\t\t\taction = toggleActions[toggleState];\n\t\t\t\t\t\tif (animation && (action === \"complete\" || action === \"reset\" || action in animation)) {\n\t\t\t\t\t\t\tif (action === \"complete\") {\n\t\t\t\t\t\t\t\tanimation.pause().totalProgress(1);\n\t\t\t\t\t\t\t} else if (action === \"reset\") {\n\t\t\t\t\t\t\t\tanimation.restart(true).pause();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation[action]();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate && !_refreshing && onUpdate(self);\n\t\t\t\t\t}\n\t\t\t\t\tif (!_refreshing || !initted) {\n\t\t\t\t\t\ttoggleClass && toggled && _toArray(toggleClass.targets).forEach(el => el.classList.toggle(toggleClass.className));\n\t\t\t\t\t\tonToggle && toggled && onToggle(self);\n\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t\tonce && (callbacks[toggleState] = 0); // a callback shouldn't be called again if once is true.\n\t\t\t\t\t\tif (!toggled) { // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n\t\t\t\t\t\t\ttoggleState = clipped === 1 ? 1 : 3;\n\t\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (isToggle && onUpdate && !_refreshing) {\n\t\t\t\t\tonUpdate(self);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update absolutely-positioned markers (only if the scroller isn't the viewport)\n\t\t\tif (markerEndSetter) {\n\t\t\t\tmarkerStartSetter(scroll + (markerStartTrigger._isFlipped ? 1 : 0));\n\t\t\t\tmarkerEndSetter(scroll);\n\t\t\t}\n\t\t};\n\n\t\tself.enable = () => {\n\t\t\tif (!enabled) {\n\t\t\t\tenabled = true;\n\t\t\t\t_addListener(scroller, \"resize\", _onResize);\n\t\t\t\t_addListener(scroller, \"scroll\", _onScroll);\n\t\t\t\tanimation && animation.add && gsap.delayedCall(0.01, self.refresh); // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick.\n\t\t\t\tself.refresh();\n\t\t\t}\n\t\t};\n\n\t\tself.disable = reset => {\n\t\t\tif (enabled) {\n\t\t\t\tenabled = self.isActive = false;\n\t\t\t\treset !== enabled && self.update(1);\n\t\t\t\tpin && _swapPinOut(pin, spacer, pinOriginalState);\n\t\t\t\tif (!isViewport) {\n\t\t\t\t\tlet i = _triggers.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n\t\t\t\t\t\t\treturn; //don't remove the listeners if there are still other triggers referencing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_removeListener(scroller, \"resize\", _onResize);\n\t\t\t\t\t_removeListener(scroller, \"scroll\", _onScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.kill = reset => {\n\t\t\tself.disable(reset);\n\t\t\tid && (delete _ids[id]);\n\t\t\t_triggers.splice(_triggers.indexOf(self), 1);\n\t\t\tanimation && (animation.scrollTrigger = null);\n\t\t};\n\n\t\tself.enable();\n\t}\n\n\n\tstatic register(core) {\n\t\tgsap = core || _getGSAP();\n\t\tif (_windowExists() && window.document) {\n\t\t\t_win = window;\n\t\t\t_doc = document;\n\t\t\t_docEl = _doc.documentElement;\n\t\t\t_body = _doc.body;\n\t\t\t_raf = _win.requestAnimationFrame || (f => setTimeout(f, 16));\n\t\t\t_addListener(_win, \"mousewheel\", _onScroll);\n\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t_addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\t\t\tlet bodyStyle = _body.style,\n\t\t\t\tborder = bodyStyle.borderTop,\n\t\t\t\tbounds;\n\t\t\tbodyStyle.borderTop = \"1px solid #000\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\t\t\tbounds = _getBounds(_body);\n\t\t\t_vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\t\t\t_horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n\t\t\tborder ? (bodyStyle.borderTop = border) : bodyStyle.removeProperty(\"border-top\");\n\t\t}\n\t\tif (gsap && _docEl) {\n\t\t\t_toArray = gsap.utils.toArray;\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t_syncInterval = setInterval(_sync, 100);\n\t\t\tgsap.delayedCall(0.5, () => _startup = 0);\n\t\t\t_addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\t\t\t_addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t\t_multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", () => _pointerIsDown = 1);\n\t\t\t_multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", () => _pointerIsDown = 0);\n\t\t\t_transformProp = gsap.utils.checkPrefix(\"transform\");\n\t\t\t_stateProps.push(_transformProp);\n\t\t\t_coreInitted = _getTime();\n\t\t\t_resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n\t\t\t_addListener(_doc, \"visibilitychange\", () => _doc.hidden || _refreshAll());\n\t\t\t_addListener(_doc, \"DOMContentLoaded\", _refreshAll);\n\t\t\t_addListener(_win, \"load\", () => _lastScrollTime || _refreshAll());\n\t\t\t_addListener(_win, \"resize\", _onResize);\n\t\t}\n\t}\n\n\tstatic defaults(config) {\n\t\tfor (let p in config) {\n\t\t\t_defaults[p] = config[p];\n\t\t}\n\t}\n\n\tstatic kill() {\n\t\t_enabled = 0;\n\t\t_triggers.slice(0).forEach(trigger => trigger.kill(1));\n\t}\n\n}\n\nScrollTrigger.version = \"3.3.0\";\nScrollTrigger.create = (vars, animation) => new ScrollTrigger(vars, animation);\nScrollTrigger.refresh = safe => safe ? _onResize() : _refreshAll(true);\nScrollTrigger.update = _updateAll;\nScrollTrigger.maxScroll = (element, horizontal) => _maxScroll(element, horizontal ? _horizontal : _vertical);\nScrollTrigger.getScrollFunc = (element, horizontal) => (horizontal = horizontal ? _horizontal : _vertical) && (_isViewport(element) ? horizontal.sc : _getScrollFunc(element, horizontal));\nScrollTrigger.getById = id => _ids[id];\nScrollTrigger.getAll = () => _triggers.slice(0);\nScrollTrigger.syncInterval = ms => clearInterval(_syncInterval) || ((_syncInterval = ms) && setInterval(_sync, ms));\nScrollTrigger.isScrolling = () => !!_lastScrollTime;\nScrollTrigger.addEventListener = (type, callback) => {\n\tlet a = _listeners[type] || (_listeners[type] = []);\n\t~a.indexOf(callback) || a.push(callback);\n};\nScrollTrigger.removeEventListener = (type, callback) => {\n\tlet a = _listeners[type],\n\t\ti = a && a.indexOf(callback);\n\ti >= 0 && a.splice(i, 1);\n}\n\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\n\nexport { ScrollTrigger as default };"],"names":["_passThrough","v","_windowExists","window","_getGSAP","gsap","registerPlugin","_isViewport","e","_root","indexOf","_getScrollFunc","element","s","value","arguments","length","_maxScroll","d2","Math","max","_docEl","_body","_win","_isString","_isFunction","_isNumber","_isObject","_getComputedStyle","getComputedStyle","_setDefaults","obj","defaults","p","_getBounds","withoutTransforms","tween","_transformProp","to","x","y","xPercent","yPercent","rotation","rotationX","rotationY","scale","skewX","skewY","progress","bounds","getBoundingClientRect","kill","_getSize","_multiListener","func","types","callback","split","forEach","type","_addListener","addEventListener","passive","_removeListener","removeEventListener","_offsetToPx","size","eqIndex","relative","charAt","parseFloat","substr","_keywords","_createMarker","name","container","direction","offset","matchWidthEl","startColor","endColor","fontSize","indent","fontWeight","_doc","createElement","isViewport","isScroller","parent","isStart","color","css","_vertical","_right","_bottom","offsetWidth","_isStart","setAttribute","style","cssText","innerText","insertBefore","children","_offset","op","_positionMarker","_sync","_request","_raf","_updateAll","_onScroll","_lastScrollTime","_dispatch","_getTime","_onResize","_refreshing","_resizeDelay","restart","_refreshAll","force","l","_triggers","i","refresh","_swapPinOut","pin","spacer","state","parentNode","_setState","removeChild","_swapPinIn","cs","_propNamesToCopy","spacerStyle","pinStyle","position","overflow","boxSizing","_width","_horizontal","_px","_height","_padding","_margin","_top","_left","appendChild","_getState","_stateProps","push","t","_parsePosition","trigger","scrollerSize","scroll","marker","markerScroller","self","scrollerBounds","borderWidth","scrollerMax","localOffset","globalOffset","display","_toArray","offsets","left","top","removeProperty","d","m","round","_getTweenCreator","scroller","lastScroll","getScroll","sc","prop","p2","getTween","scrollTo","vars","initialValue","change1","change2","onComplete","modifiers","ratio","call","_coreInitted","_clamp","_time2","_syncInterval","_pointerIsDown","_startup","Date","now","_time1","_enabled","_abs","abs","_scrollLeft","_scrollTop","_Right","_Left","_Top","_Bottom","_Width","_Height","os","os2","a","pageXOffset","pageYOffset","_markerDefaults","_defaults","toggleActions","anticipatePin","center","bottom","right","start","flipped","side","oppositeSide","_isFlipped","set","_ids","_listeners","f","time","recordVelocity","update","concat","_capsExp","replace","toLowerCase","_winOffsets","_prefixExp","ScrollTrigger","init","animation","this","tweenTo","pinCache","snapFunc","isReverted","scroll1","scroll2","end","markerStart","markerEnd","markerStartTrigger","markerEndTrigger","markerVars","change","pinOriginalState","pinActiveState","pinState","pinGetter","pinSetter","pinStart","spacingStart","spacingActive","markerStartSetter","markerEndSetter","initted","snap1","snap2","scrubScrollTime","scrubTween","scrubSmooth","snapDurClamp","snapDelayedCall","enabled","nodeType","horizontal","onUpdate","toggleClass","id","onToggle","onRefresh","scrub","pinSpacing","invalidateOnRefresh","onScrubComplete","onSnapComplete","once","snap","pinReparent","isToggle","scrollerCache","core","getCache","callbacks","onEnter","onLeave","onEnterBack","onLeaveBack","markers","softRefresh","_this","tweenScroll","lazy","_initted","render","pause","scrollTrigger","ease","duration","snapTo","_getLabels","labels","utils","min","delayedCall","delay","totalProgress","velocity","naturalEnd","endValue","endScroll","data","targets","className","force3D","getProperty","quickSetter","_makePositionable","revert","soft","prevScroll","invalidate","isVertical","override","parsedEnd","parsedEndTrigger","endTrigger","parsedStart","ceil","width","height","_copyState","omitOffsets","result","_pinOffset","getVelocity","reset","isActive","toggleState","action","stateChanged","toggled","clipped","prevProgress","_reparent","_stOrig","test","el","classList","toggle","enable","add","disable","splice","register","document","documentElement","body","requestAnimationFrame","setTimeout","bodyStyle","border","borderTop","toArray","clamp","setInterval","checkPrefix","hidden","config","slice","console","warn","version","create","safe","maxScroll","getScrollFunc","getById","getAll","syncInterval","ms","clearInterval","isScrolling"],"mappings":"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"}